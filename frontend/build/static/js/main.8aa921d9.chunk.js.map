{"version":3,"sources":["view/HomePage.js","App.js","reportWebVitals.js","components/UseForm.js","components/controls/Button.js","components/controls/Controls.js","components/controls/Input.js","components/controls/Checkbox.js","components/controls/Password.js","view/LoginPage.js","view/RegisterPage.js","view/DashBoard.js","view/AddUrl.js","Routes.js","index.js"],"names":["Copyright","Typography","variant","color","align","Date","getFullYear","useStyles","makeStyles","theme","icon","marginRight","spacing","heroContent","backgroundColor","palette","background","paper","padding","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","height","display","flexDirection","cardMedia","cardContent","flexGrow","footer","HomePage","props","classes","history","CssBaseline","AppBar","position","Toolbar","noWrap","className","Container","maxWidth","component","gutterBottom","paragraph","Grid","container","justify","item","Button","onClick","push","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","useForm","initialFValues","validateOnChange","validate","useState","values","setValues","errors","setErrors","handleInputChange","e","target","name","value","resetForm","root","width","margin","Form","other","children","autoComplete","label","textTransform","Controls","Input","error","onChange","TextField","size","helperText","Checkbox","FormControl","FormControlLabel","control","checked","convertToDefEventPara","text","Password","type","justifyContent","alignItems","textAlign","mBottom","marginBottom","button","loginCard","borderRadius","userName","password","LoginPage","fieldValues","temp","length","Object","every","x","onSubmit","console","log","preventDefault","username","axios","post","headers","response","data","alert","localStorage","setItem","JSON","stringify","catch","xs","sm","md","fullWidth","userTypes","id","title","email","userType","RegisterPage","test","Select","options","addButton","marginLeft","myContent","DashBoard","list","setList","monitoredList","setmonitoredList","useEffect","getItem","get","interval","setInterval","window","location","reload","clearInterval","Fragment","removeItem","document","href","Table","TableRow","TableCell","TableBody","map","urldata","uid","loginUser","parsedloginuser","parse","config","Authorization","token","deleteHandle","_id","url","responseTime","murldata","userId","hist","createBrowserHistory","Routes","exact","path","AddUrl","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8aa921d9.chunk.js","sourcesContent":["import * as React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n        My Website\n      {' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n}));\n\nconst cards = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\nconst HomePage = props => {\n  const classes = useStyles();\n  const { history } = props;\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <AppBar position=\"relative\">\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n           \n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <main>\n        {/* Hero unit */}\n        <div className={classes.heroContent}>\n          <Container maxWidth=\"sm\">\n            <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n            Availability monitoring App\n            </Typography>\n            <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n            Availability monitoring Application which monitors your configured URL and logs the details.\n            </Typography>\n            <div className={classes.heroButtons}>\n              <Grid container spacing={2} justify=\"center\">\n                <Grid item>\n                  <Button variant=\"outlined\" color=\"primary\" onClick={() => history.push(\"/login\")}>\n                    Login\n                  </Button>\n                </Grid>\n              </Grid>\n            </div>\n          </Container>\n        </div>\n        \n      </main>\n      {/* Footer */}\n      <footer className={classes.footer}>\n       \n        <Copyright />\n      </footer>\n      {/* End footer */}\n    </React.Fragment>\n  );\n}\nexport default HomePage;","import './App.css';\nimport HomePage from './view/HomePage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HomePage/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState } from 'react'\nimport { makeStyles } from \"@material-ui/core\";\n\n\nexport function useForm(initialFValues, validateOnChange = false, validate) {\n\n\n    const [values, setValues] = useState(initialFValues);\n    const [errors, setErrors] = useState({});\n\n    const handleInputChange = e => {\n        const { name, value } = e.target\n        setValues({\n            ...values,\n            [name]: value\n        })\n        if (validateOnChange)\n            validate({ [name]: value })\n    }\n\n    const resetForm = () => {\n        setValues(initialFValues);\n        setErrors({})\n    }\n\n\n    return {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n\n    }\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        '& .MuiFormControl-root': {\n            width: '80%',\n            margin: theme.spacing(1)\n        }\n    }\n}))\n\nexport function Form(props) {\n\n    const classes = useStyles();\n    const { children, ...other } = props;\n    return (\n        <form className={classes.root} autoComplete=\"off\" {...other}>\n            {props.children}\n        </form>\n    )\n}","import React from 'react'\nimport { Button as MuiButton, makeStyles } from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        margin: theme.spacing(0.5)\n    },\n    label: {\n        textTransform: 'none'\n    }\n}))\n\nexport default function Button(props) {\n\n    const { text, size, color, variant, onClick, ...other } = props\n    const classes = useStyles();\n\n    return (\n        <MuiButton\n            variant={variant || \"contained\"}\n            size={size || \"large\"}\n            color={color || \"primary\"}\n            onClick={onClick}\n            {...other}\n            classes={{ root: classes.root, label: classes.label }}>\n            {text}\n        </MuiButton>\n    )\n}\n","import Input from \"./Input\";\nimport Checkbox from \"./Checkbox\";\nimport Button from \"./Button\";\nimport Password from \"./Password\";\n\n\nconst Controls = {\n    Input,\n    Checkbox,\n    Button,\n    Password   \n}\n\nexport default Controls;","import React from 'react'\nimport { TextField } from '@material-ui/core';\n\nexport default function Input(props) {\n\n    const { name, label, value,error=null, onChange } = props;\n    return (\n        <TextField\n            variant=\"outlined\"\n            label={label}\n            name={name}\n            value={value}\n            size=\"small\"\n            onChange={onChange}\n            {...(error && {error:true,helperText:error})}\n        />\n    )\n}\n","import React from 'react'\nimport { FormControl, FormControlLabel, Checkbox as MuiCheckbox } from '@material-ui/core';\n\nexport default function Checkbox(props) {\n\n    const { name, label, value, onChange } = props;\n\n\n    const convertToDefEventPara = (name, value) => ({\n        target: {\n            name, value\n        }\n    })\n\n    return (\n        <FormControl>\n            <FormControlLabel\n                control={<MuiCheckbox\n                    name={name}\n                    color=\"primary\"\n                    checked={value}\n                    onChange={e => onChange(convertToDefEventPara(name, e.target.checked))}\n                />}\n                label={label}\n            />\n        </FormControl>\n    )\n}\n","import React from 'react'\nimport { TextField } from '@material-ui/core';\n\nexport default function Input(props) {\n\n    const { name, label, value,error=null, onChange } = props;\n    return (\n        <TextField\n            variant=\"outlined\"\n            label={label}\n            name={name}\n            value={value}\n            size=\"small\"\n            type=\"password\"\n            onChange={onChange}\n            {...(error && {error:true,helperText:error})}\n        />\n    )\n}\n","import * as React from 'react';\nimport axios from 'axios';\nimport { makeStyles, Typography, Button } from \"@material-ui/core\";\nimport { useForm, Form } from '../components/UseForm';\nimport Controls from \"../components/controls/Controls\";\nimport { Grid } from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    background: \"#0d131d\",\n    width: \"100vw\",\n    height: \"100vh\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    textAlign: \"center\"\n  },\n  mBottom: {\n    marginBottom: \".5rem\"\n  },\n  button: {\n    marginTop: \".85rem\"\n  },\n  loginCard: {\n    width: \"275px\",\n    borderRadius: 5,\n    background: \"#fff\",\n    padding: \".85rem\"\n  }\n}));\n\nconst initialFValues = {\n  userName: '',\n  password: '',\n}\n\nconst LoginPage = props => {\n  const classes = useStyles();\n  const { history } = props;\n\n  const validate = (fieldValues = values) => {\n    let temp = { ...errors }\n    if ('password' in fieldValues)\n      temp.password = fieldValues.password.length > 8 ? \"\" : \"Username must be at least 8 chars long.\"\n    if ('userName' in fieldValues)\n      temp.userName = fieldValues.userName.length > 5 ? \"\" : \"password must be at least 5 chars long.\"\n    setErrors({\n      ...temp\n    })\n\n    if (fieldValues == values)\n      return Object.values(temp).every(x => x == \"\")\n  }\n\n  const {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetForm\n  } = useForm(initialFValues, true, validate);\n\n\n  const handleSubmit = e => {\n    console.log(values);\n    e.preventDefault();\n    if (validate()) {\n\n        console.log(values);\n        var username = values.userName;\n        var password = values.password;\n\n        const config = {\n          headers: {\n              'Content-Type': 'application/json',\n          },\n        }\n        axios.post('/api/auth/login', { username,password }, config)\n        .then(response => {\n              console.log(response.data);\n              alert('Login success')\n              localStorage.setItem('userInfo', JSON.stringify(response.data))\n              history.push(\"/dashboard\")               \n        })\n        .catch(function (error) {     \n          console.log(error)  \n          alert('Invalid username or password') \n          history.push(\"/login\")         \n      })\n\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.loginCard}>\n        <Typography variant=\"h5\" component=\"h1\">\n          Login\n        </Typography>\n        {/* <Typography className={classes.brand} variant=\"h5\" component=\"h1\">\n          Login\n        </Typography> */}\n        <Typography className={classes.mBottom} variant=\"body1\">\n          Sign In to your account\n        </Typography>\n        <Form onSubmit={handleSubmit}>\n          <Grid container>\n            <Grid item xs={12} sm={12} md={12}>\n              <Controls.Input\n                name=\"userName\"\n                label=\"Username\"\n                value={values.userName}\n                onChange={handleInputChange}\n                error={errors.userName}\n              />\n              <Controls.Password\n                label=\"Password\"\n                name=\"password\"\n                value={values.password}\n                onChange={handleInputChange}\n                error={errors.password}\n              />\n              <div className={classes.mBottom}>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  fullWidth\n                  className={classes.button}\n                  type=\"submit\"\n                >\n                  Login\n                </Button>\n                \n              </div>\n            </Grid>\n          </Grid>\n        </Form>\n        <Typography variant=\"caption\">&copy; My App</Typography>\n      </div>\n      \n    </div>\n  );\n};\n\nexport default LoginPage;\n","import React from \"react\";\nimport axios from 'axios'\nimport { makeStyles, Typography, Button, TextField } from \"@material-ui/core\";\nimport { useForm, Form } from '../components/UseForm';\nimport Controls from \"../components/controls/Controls\";\nimport { Grid } from '@material-ui/core'\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    background: \"#0d131d\",\n    width: \"100vw\",\n    height: \"100vh\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    textAlign: \"center\"\n  },\n  mBottom: {\n    marginBottom: \".5rem\"\n  },\n  button: {\n    marginTop: \".85rem\"\n  },\n  loginCard: {\n    width: \"275px\",\n    borderRadius: 5,\n    background: \"#fff\",\n    padding: \".85rem\"\n  }\n}));\n\nconst userTypes = [\n  { id: 'S', title: 'Sale' },\n  { id: 'A', title: 'Admin' },\n  { id: 'SA', title: 'Super Admin' },\n  { id: 'AC', title: 'Accounts' }\n]\nconst initialFValues = {\n  userName: '',\n  password: '',\n  email: '',\n  userType: ''\n}\n\nconst RegisterPage = props => {\n  const classes = useStyles();\n  const { history } = props;\n\n  const validate = (fieldValues = values) => {\n    let temp = { ...errors }\n    \n    if ('email' in fieldValues)\n      temp.email = (/$^|.+@.+..+/).test(fieldValues.email) ? \"\" : \"Email is not valid.\"\n    if ('password' in fieldValues)\n      temp.password = fieldValues.password.length >= 8 ? \"\" : \"Password must have at least 8 characters.\"\n    setErrors({\n      ...temp\n    })\n\n    if (fieldValues == values)\n      return Object.values(temp).every(x => x == \"\")\n  }\n\n  const {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetForm\n  } = useForm(initialFValues, true, validate);\n\n\n  const handleSubmit = e => {\n    console.log(values);\n    e.preventDefault();\n\n    if (validate()) {\n        console.log(values);\n        var username = values.userName;\n        var password = values.password;\n        var email = values.email;\n        var userType = values.userType;\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n          }\n          axios.post('/api/auth/register', { username,password,email,userType }, config)\n          .then(response => {\n              console.log(response.data);\n              alert('User registerd')\n              localStorage.setItem('userInfo', JSON.stringify(response.data))\n              history.push(\"/login\")\n          })\n          .catch(function (error) {     \n            console.log(error)  \n            alert('User already Exists') \n            history.push(\"/login\")         \n        })\n    }\n  }\n\n  return (\n    \n    <div className={classes.root}>\n      <div className={classes.loginCard}>\n        <Typography variant=\"h5\" component=\"h1\">\n          Register\n        </Typography>\n        {/* <Typography className={classes.brand} variant=\"h5\" component=\"h1\">\n          Login\n        </Typography> */}\n        <Typography className={classes.mBottom} variant=\"body1\">\n          Create your account\n        </Typography>\n        <Form onSubmit={handleSubmit}>\n          <Grid container>\n              <Grid item xs={12} sm={12} md={12}>\n                <Controls.Input\n                  name=\"userName\"\n                  label=\"Username\"\n                  value={values.userName}\n                  onChange={handleInputChange}\n                  error={errors.userName}\n                  fullWidth\n                  />\n                  <Controls.Input\n                  name=\"email\"\n                  label=\"Email\"\n                  value={values.email}\n                  onChange={handleInputChange}\n                  error={errors.email}\n                />\n                <Controls.Password\n                  name=\"password\"\n                  label=\"Password\"\n                  value={values.password}\n                  onChange={handleInputChange}\n                  error={errors.password}\n                />\n                <Controls.Select\n                    label=\"User Type\"\n                    name=\"userType\"\n                    value={values.userType}\n                    onChange={handleInputChange}\n                    options={userTypes}\n                    error={errors.userType}\n                />\n              </Grid>\n          </Grid>    \n         \n          <div className={classes.mBottom}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              fullWidth\n              className={classes.button}\n              type=\"submit\"\n            >\n              Register\n            </Button>\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              fullWidth\n              className={classes.button}\n              onClick={() => history.push(\"/login\")}\n            >\n              Sign in\n            </Button>\n          </div>\n          </Form>\n        <Typography variant=\"caption\">&copy; My App</Typography>\n      </div>\n    \n    </div>\n  );\n};\n\nexport default RegisterPage;\n","import AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Form,Table, TableBody, TableRow, TableCell } from '@material-ui/core';\nimport axios from 'axios'\nimport React, { useState, useEffect } from 'react'\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  addButton: {\n    marginLeft: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  myContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6, 0, 0),\n  }\n}));\n\n\nconst DashBoard = props => {\n  const classes = useStyles();\n  const { history } = props;\n  const [list, setList] = useState([]);\n  const [monitoredList, setmonitoredList] = useState([]);\n  useEffect(() => {\n\n    var loginUser = localStorage.getItem(\"userInfo\");\n    if(loginUser==null) \n    {\n        history.push(\"/login\")\n    }\n\n    }, []);\n\n    useEffect(() => {\n\n    try {\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }\n        axios.get('/api/url/geturl', config)\n            .then(response => {\n                console.log(response.data);\n                setList(response.data)\n            })\n        } catch (error) {\n            console.log(error)\n        }\n\n        const config = {\n          headers: {\n              'Content-Type': 'application/json',\n          },\n        }\n        axios.get('/api/url/getmonitorUrl', config)\n        .then(response => {\n            console.log(response.data);\n            setmonitoredList(response.data)\n        })\n\n    }, []);\n\n    useEffect(() => {\n\n      const interval = setInterval(() => {\n      axios.get('/api/url/monitor')\n\n\n      \n      window.location.reload(); \n\n      }, 300000);\n      return () => clearInterval(interval);\n\n    }, []);\n\n    //deletemurl\n    function deleteHandle(uid)\n    {\n        var loginUser = localStorage.getItem(\"userInfo\");\n        var parsedloginuser = JSON. parse(loginUser)\n  \n        const config = {\n          headers: {\n            Authorization: `Bearer ${parsedloginuser.token}`,\n          },\n        }\n  \n        axios.get(`/api/url/${uid}`,config)\n        window.location.reload(); \n\n    }\n\n    function handleLogout()\n    {\n      localStorage.removeItem('userInfo')\n    \n      document.location.href = '/login'\n    }\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            Dashboard\n          </Typography>\n          <Button color=\"inherit\" onClick={handleLogout}>Logout</Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n      <main>\n        {/* Hero unit */}\n        <div className={classes.myContent}>\n          <Button className={classes.addButton} variant=\"outlined\" color=\"primary\" onClick={() => history.push(\"/addurl\")}>\n            Add URL\n          </Button>\n          <br></br><br></br>\n            <Grid item  xs={12} sm={12} md={8}>\n         \n              <Table>\n                <TableRow>\n                  <TableCell>\n                    \n                  </TableCell>\n                  <TableCell><b>Url</b></TableCell>\n                  <TableCell><b>Response limit(ms)</b></TableCell>       \n                </TableRow>               \n                <TableBody>\n                  {list.map(urldata => (\n                      <TableRow>\n                        <TableCell>\n                          <Button variant=\"contained\" color=\"secondary\" onClick={e => deleteHandle(urldata._id)}>\n                            Delete\n                          </Button>\n                        </TableCell>\n                          <TableCell >{urldata.url}</TableCell>\n                          <TableCell >{urldata.responseTime}</TableCell>\n                      </TableRow>\n                  ))}  \n                </TableBody>\n              </Table>\n            </Grid>  \n            <br></br><br></br>\n            <h3>Show urls more time than limit</h3>\n            <Grid item  xs={12} sm={12} md={8}>        \n              <Table>\n                <TableRow>\n                  <TableCell><b>Urls</b></TableCell>\n                </TableRow>               \n                <TableBody>\n                  {monitoredList.map(murldata => (\n                      <TableRow>\n                          <TableCell >{murldata.url}</TableCell>\n                      </TableRow>\n                  ))}  \n                </TableBody>\n              </Table>\n            </Grid>     \n        </div>\n        \n      </main>\n      \n    </React.Fragment>\n  );\n}\nexport default DashBoard;","import AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useForm, Form } from '../components/UseForm';\nimport Controls from \"../components/controls/Controls\";\nimport axios from 'axios'\nimport React, { useState, useEffect } from 'react'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  addButton: {\n    marginLeft: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  myContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6, 6, 0),\n  }\n}));\nconst initialFValues = {\n    url: '',\n    responseTime: '',\n}\n\nconst DashBoard = props => {\n  const classes = useStyles();\n  const { history } = props;\n\n  useEffect(() => {\n\n    var loginUser = localStorage.getItem(\"userInfo\");\n    if(loginUser==null) \n    {\n        history.push(\"/login\")\n    }\n\n    }, []);\n\n    const validate = (fieldValues = values) => {\n        let temp = { ...errors }\n        if ('responseTime' in fieldValues)\n            temp.responseTime = fieldValues.responseTime ? \"\" : \"Response Time is required.\"\n        if ('url' in fieldValues)\n            temp.url = fieldValues.url ? \"\" : \"Url is required.\"\n        setErrors({\n            ...temp\n    })\n\n    if (fieldValues == values)\n        return Object.values(temp).every(x => x == \"\")\n    }\n    const {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    } = useForm(initialFValues, true, validate);\n\n    const handleSubmit = e => {\n      e.preventDefault();\n        if (validate()) {\n            console.log(values)\n\n            const url = values.url;\n            const responseTime = values.responseTime;\n\n            const loginUser = localStorage.getItem(\"userInfo\");\n            const parsedloginuser = JSON.parse(loginUser)\n            const userId = parsedloginuser._id\n            console.log(userId)\n            const config = {\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${parsedloginuser.token}`,\n                },\n            }\n            axios.post('/api/url/addurl', {url,responseTime,userId}, config)\n                .then(response => {\n                    console.log(response.data);\n                    alert('Url added')\n                    history.push('/dashboard')\n                })\n                .catch(function (error) {     \n                  console.log(error)  \n                  alert('Url not added')\n                  history.push(\"/addurl\")         \n              })\n        }\n    }    \n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            Add URL\n          </Typography>\n          \n        </Toolbar>\n      </AppBar>\n    </div>\n    <div className={classes.myContent}>\n    <Button color=\"inherit\" onClick={() => history.push(\"/dashboard\")}>Go Back</Button><br></br><br></br><br></br>   \n        <Form onSubmit={handleSubmit}>\n            <Grid container>\n                <Grid item xs={12} sm={12} md={6}>\n                    <Controls.Input\n                        name=\"url\"\n                        label=\"URL\"\n                        value={values.url}\n                        onChange={handleInputChange}\n                        error={errors.url}\n                    /> \n                </Grid>         \n                <Grid item xs={12} sm={12} md={6}>\n                    <Grid item xs={5}>\n                        <Controls.Input\n                            name=\"responseTime\"\n                            label=\"Response Time(ms)\"\n                            value={values.responseTime}\n                            onChange={handleInputChange}\n                            error={errors.responseTime}\n                        />\n                    </Grid>                    \n                </Grid>                   \n            </Grid> \n\n            <div>\n                <Controls.Button\n                    type=\"submit\"\n                    text=\"Add\" />\n            </div>  \n        </Form>             \n    </div>\n    \n    </React.Fragment>\n  );\n}\nexport default DashBoard;","import * as React from 'react';\nimport { BrowserRouter, Link, Switch, Route} from 'react-router-dom';\nimport HomePage from './view/HomePage';\nimport LoginPage from './view/LoginPage';\nimport RegisterPage from './view/RegisterPage';\nimport DashBoard from './view/DashBoard';\nimport AddUrl from './view/AddUrl';\nimport { createBrowserHistory } from \"history\";\n\nconst hist = createBrowserHistory();\n\nconst Routes = () => {\n\n    return (\n        <BrowserRouter history={hist}>\n            <Switch>\n                <Route exact path = \"/\" component = {HomePage}/>\n                <Route exact path = \"/login\" component = {LoginPage}/>\n                <Route exact path = \"/register\" component = {RegisterPage}/>\n                <Route exact path= \"/dashboard\" exact component ={DashBoard} />\n                <Route exact path= \"/addurl\" exact component ={AddUrl} />\n            </Switch>\n        </BrowserRouter>\n    );\n\n}\n\nexport default Routes;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Routes from './../src/Routes';\n\nReactDOM.render(\n    <Routes/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}